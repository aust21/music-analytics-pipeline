version: '3.8'

services:
  # Kafka Broker
  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions.sh --bootstrap-server localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redpanda Console
  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda-console
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: broker:29092
    depends_on:
      broker:
        condition: service_healthy

  # Java Kafka Producer
  kafka-producer:
    build:
      context: ./kafka-producer  # Assuming your Java project is in a 'kafka' directory
      dockerfile: Dockerfile
    container_name: kafka-producer
    environment:
      # Override Kafka broker URL for containerized environment
      KAFKA_BOOTSTRAP_SERVERS: broker:29092
    depends_on:
      broker:
        condition: service_healthy
    restart: on-failure

  # Node.js Server
  server:
    build:
      context: ./backend  # Assuming your Node.js server is in a 'server' directory
      dockerfile: Dockerfile
    container_name: node-server
    ports:
      - "3001:3000"  # Adjust port as needed
    environment:
      - NODE_ENV=production
      - KAFKA_BROKER=broker:29092
    depends_on:
      broker:
        condition: service_healthy
    restart: unless-stopped

networks:
  default:
    driver: bridge